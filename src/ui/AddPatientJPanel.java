/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ClinicSystem;
import model.Encounter;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;
import model.VitalSignHistory;
import model.VitalSigns;

/**
 *
 * @author jarvis
 */
public class AddPatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddPatientJPanel
     */
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;
    Patient cs;
    VitalSignHistory vitalSignHistory;
    
   
//    ArrayList<Patient> patientArrayList;
    DefaultTableModel defaultTableModel;
    int row, column;  
    
    
    public AddPatientJPanel(PersonDirectory personDirectory,PatientDirectory patientDirectory,VitalSignHistory vitalSignHistory) {
        initComponents();
        this.personDirectory= personDirectory;
        this.patientDirectory= patientDirectory;
        this.vitalSignHistory=vitalSignHistory;
        
        populatePersonTable();
        //populatePatientTable();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblPatientName = new javax.swing.JLabel();
        lblPatientAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblContactNumber = new javax.swing.JLabel();
        lblResidence = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        txtPatientAge = new javax.swing.JTextField();
        txtPatientContactNumber = new javax.swing.JTextField();
        txtPatientResidence = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblPatientClinicNumber = new javax.swing.JLabel();
        txtPatientClinicId = new javax.swing.JTextField();
        comboBoxPatientCity = new javax.swing.JComboBox<>();
        comboBoxPatientCommunity = new javax.swing.JComboBox<>();
        jRadioButtonPMale = new javax.swing.JRadioButton();
        jRadioButtonPFemale = new javax.swing.JRadioButton();
        jRadioButtonPOthers = new javax.swing.JRadioButton();
        lblBodyTemperature2 = new javax.swing.JLabel();
        lblBloodPressure2 = new javax.swing.JLabel();
        lblHeartRate2 = new javax.swing.JLabel();
        lblBodyWeight2 = new javax.swing.JLabel();
        lblDate2 = new javax.swing.JLabel();
        txtVisitDate = new javax.swing.JTextField();
        txtPatientBodyWeight = new javax.swing.JTextField();
        txtPatientHeartRate = new javax.swing.JTextField();
        txtPatientBloodPressure = new javax.swing.JTextField();
        txtPatientBodyTemperature = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAddPatientPersonDirectory = new javax.swing.JTable();
        btnMakePatient = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePatientDirectoryData = new javax.swing.JTable();
        btnAddPatient = new javax.swing.JButton();

        lblPatientName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblPatientName.setText("Patient Name");

        lblPatientAge.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblPatientAge.setText("Patient Age");

        lblGender.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblGender.setText("Gender");

        lblContactNumber.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblContactNumber.setText("Contact Number");

        lblResidence.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblResidence.setText("Residence");

        txtPatientAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientAgeActionPerformed(evt);
            }
        });

        lblCity.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblCity.setText("City");

        lblCommunity.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblCommunity.setText("Community");

        lblPatientClinicNumber.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblPatientClinicNumber.setText("Patient ID");

        comboBoxPatientCity.setEditable(true);
        comboBoxPatientCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "NewYork", "Worcester", "Springfield", "Cambridge", "Lowell", " " }));
        comboBoxPatientCity.setSelectedIndex(-1);

        comboBoxPatientCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allston", "Back Bay", "Mission Hill", "Roxbury" }));
        comboBoxPatientCommunity.setSelectedIndex(-1);

        jRadioButtonPMale.setText("Male");

        jRadioButtonPFemale.setText("Female");

        jRadioButtonPOthers.setText("Others");
        jRadioButtonPOthers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPOthersActionPerformed(evt);
            }
        });

        lblBodyTemperature2.setText("Body Temperature");

        lblBloodPressure2.setText("Blood Pressure");

        lblHeartRate2.setText("Heart Rate");

        lblBodyWeight2.setText("Body Weight");

        lblDate2.setText("Date");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPatientName)
                    .addComponent(lblPatientAge)
                    .addComponent(lblGender)
                    .addComponent(lblContactNumber)
                    .addComponent(lblResidence))
                .addGap(60, 60, 60)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jRadioButtonPMale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonPFemale)
                        .addGap(12, 12, 12)
                        .addComponent(jRadioButtonPOthers))
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientResidence, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCommunity)
                            .addComponent(lblPatientClinicNumber)
                            .addComponent(lblCity))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPatientClinicId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxPatientCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxPatientCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBodyTemperature2)
                            .addComponent(lblBloodPressure2)
                            .addComponent(lblHeartRate2)
                            .addComponent(lblBodyWeight2)
                            .addComponent(lblDate2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtVisitDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatientBodyWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatientHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatientBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatientBodyTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(175, 175, 175))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboBoxPatientCity, comboBoxPatientCommunity, txtPatientAge, txtPatientClinicId, txtPatientContactNumber, txtPatientName, txtPatientResidence});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientName)
                            .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientAge)
                            .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGender)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jRadioButtonPMale)
                                .addComponent(jRadioButtonPFemale)
                                .addComponent(jRadioButtonPOthers)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblContactNumber)
                            .addComponent(txtPatientContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblResidence)
                            .addComponent(txtPatientResidence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity)
                            .addComponent(comboBoxPatientCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCommunity)
                            .addComponent(comboBoxPatientCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientClinicNumber)
                            .addComponent(txtPatientClinicId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBodyTemperature2)
                            .addComponent(txtPatientBodyTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBloodPressure2)
                            .addComponent(txtPatientBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHeartRate2)
                            .addComponent(txtPatientHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBodyWeight2)
                            .addComponent(txtPatientBodyWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVisitDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38))))
        );

        jTableAddPatientPersonDirectory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Gender", "Contact Number", "Residence", "Community", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAddPatientPersonDirectory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAddPatientPersonDirectoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAddPatientPersonDirectory);

        btnMakePatient.setText("Make Patient");
        btnMakePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakePatientActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("ADD PATIENT");

        jTablePatientDirectoryData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Gender", "Contact", "Residence", "Community", "City", "Patient Id", "Blood Pressure", "Body Temperature", "Heart Rate", "Body Weight", "Date"
            }
        ));
        jScrollPane2.setViewportView(jTablePatientDirectoryData);

        btnAddPatient.setText("Add Patient");
        btnAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(439, 439, 439)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(438, 438, 438)
                        .addComponent(btnMakePatient)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(460, 460, 460)
                .addComponent(btnAddPatient)
                .addContainerGap(476, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMakePatient)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddPatient)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPatientAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientAgeActionPerformed

    private void jRadioButtonPOthersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPOthersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonPOthersActionPerformed

    private void jTableAddPatientPersonDirectoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAddPatientPersonDirectoryMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jTableAddPatientPersonDirectoryMouseClicked

    private void btnMakePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakePatientActionPerformed
        // TODO add your handling code here:
        row= jTableAddPatientPersonDirectory.getSelectedRow();
        column=jTableAddPatientPersonDirectory.getSelectedColumn();
        System.out.println(row+","+column);

        txtPatientName.setText(defaultTableModel.getValueAt(row, 0).toString());
        txtPatientAge.setText(defaultTableModel.getValueAt(row, 1).toString());

        String gender= defaultTableModel.getValueAt(row, 2).toString();
        if (gender.equals("Male")) {
            jRadioButtonPMale.setSelected(true);

        } else if(gender.equals("Female")){
            jRadioButtonPFemale.setSelected(true);
        }else if(gender.equals("Others")){
            jRadioButtonPOthers.setSelected(true);
        }

        txtPatientContactNumber.setText(defaultTableModel.getValueAt(row, 3).toString());
        txtPatientResidence.setText(defaultTableModel.getValueAt(row, 4).toString());

        String communityName = defaultTableModel.getValueAt(row, 5).toString();
        for (int i = 0; i < (comboBoxPatientCommunity.getItemCount()); i++) {
            if (comboBoxPatientCommunity.getItemAt(i).equalsIgnoreCase(communityName)) {
                comboBoxPatientCommunity.setSelectedIndex(i);
            }
        }
        String cityName = defaultTableModel.getValueAt(row, 6).toString();
        for (int i = 0; i < (comboBoxPatientCity.getItemCount()); i++) {
            if (comboBoxPatientCity.getItemAt(i).equalsIgnoreCase(cityName)) {
                comboBoxPatientCity.setSelectedIndex(i);
            }
        }

    }//GEN-LAST:event_btnMakePatientActionPerformed

    private void btnAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformed
        // TODO add your handling code here:
//        for(Cars cr : carsList){
//            if(txtSerialNumber.getText().equalsIgnoreCase(cr.serialNumber)){
//                JOptionPane.showMessageDialog(this, "Duplicate Serial Number Found! Serial Number must be Unique!");
//                return;
//            }
//        }
        String patientName =txtPatientName.getText();
        int patientAge = Integer.parseInt(txtPatientAge.getText());

        String gender="";
        if((jRadioButtonPMale.isSelected()==false)&&(jRadioButtonPFemale.isSelected()==false)&&(jRadioButtonPOthers.isSelected()==false)){
            JOptionPane.showMessageDialog(null,"Please select radio button");

        }else{
            if (jRadioButtonPMale.isSelected()) {
                gender="Male";
            }else if(jRadioButtonPFemale.isSelected()){
                gender="Female";
            }else if (jRadioButtonPOthers.isSelected()){
                gender="Other";
            }}
            long contactNumber= Long.parseLong(txtPatientContactNumber.getText());

            String cityName= comboBoxPatientCity.getSelectedItem().toString();
            String CommunityName = comboBoxPatientCommunity.getSelectedItem().toString();
            String residence = txtPatientResidence.getText();
            

            int patientClinicId = Integer.parseInt(txtPatientClinicId.getText());
            
            double bodyTemperature = Double.parseDouble(txtPatientBodyTemperature.getText());
            double bloodPressure = Double.parseDouble(txtPatientBloodPressure.getText());
            double heartRate = Double.parseDouble(txtPatientHeartRate.getText());
            double bodyWeight = Double.parseDouble(txtPatientBodyWeight.getText());
            String date = txtVisitDate.getText();
           
//            VitalSignHistory vsh = new VitalSignHistory(bodyTemperature,bloodPressure,heartRate,bodyWeight,date);
//            patient = new Patient(patientClinicId,doctorName, (VitalSignHistory) vitalSigns,patientName,patientAge,gender,contactNumber,residence,CommunityName,cityName);
//            patientDirectoryArrayList.addNewPatientDetails();
  
              VitalSignHistory vitalSignHistory = new VitalSignHistory();
              VitalSigns vitalSigns = new VitalSigns(bodyTemperature,bloodPressure,heartRate,bodyWeight,patientClinicId);
              Encounter encounter = new Encounter(date,vitalSigns);
              vitalSignHistory.addNewVitalSigns(encounter);
              Patient patient = new Patient(vitalSignHistory,patientName,patientAge,gender,contactNumber,residence,CommunityName,cityName);
              patientDirectory.addNewPatientDetails(patient);
              
//              vitalSignHistory.setId(patientClinicId);
//              vitalSignHistory.setBodyTemperature(bodyTemperature);
//              vitalSignHistory.setBloodPressure(bloodPressure);
//              vitalSignHistory.setHeartRate(heartRate);
//              vitalSignHistory.setWeight(bodyWeight);
//              vitalSignHistory.setDate(date);
              
              
//            Patient patient;
//            patient = patientDirectory.addNewPatientDetails();
//            patient.setPersonName(patientName);
//            patient.setPersonAge(patientAge);
//            patient.setGender(gender);
//            patient.setContactNumber(contactNumber);
//            patient.setHouseAddress(residence);
//            patient.setCommunityName(CommunityName);
//            patient.setCityName(cityName);
//            vitalSignHistory= (VitalSignHistory) patient.addVitalSignHistory();
//            vitalSignHistory.setId(patientClinicId);
//            vitalSignHistory.setBodyTemperature(bodyTemperature);
//            vitalSignHistory.setBloodPressure(bloodPressure);
//            vitalSignHistory.setHeartRate(heartRate);
//            vitalSignHistory.setWeight(bodyWeight);
//            vitalSignHistory.setDate(date);
                  
            JOptionPane.showMessageDialog(this, "New Person Details Added");
            populatePatientTable();
//          clearField();
            
            

    }//GEN-LAST:event_btnAddPatientActionPerformed
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPatient;
    private javax.swing.JButton btnMakePatient;
    private javax.swing.JComboBox<String> comboBoxPatientCity;
    private javax.swing.JComboBox<String> comboBoxPatientCommunity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonPFemale;
    private javax.swing.JRadioButton jRadioButtonPMale;
    private javax.swing.JRadioButton jRadioButtonPOthers;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAddPatientPersonDirectory;
    private javax.swing.JTable jTablePatientDirectoryData;
    private javax.swing.JLabel lblBloodPressure2;
    private javax.swing.JLabel lblBodyTemperature2;
    private javax.swing.JLabel lblBodyWeight2;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblContactNumber;
    private javax.swing.JLabel lblDate2;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeartRate2;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientClinicNumber;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblResidence;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientBloodPressure;
    private javax.swing.JTextField txtPatientBodyTemperature;
    private javax.swing.JTextField txtPatientBodyWeight;
    private javax.swing.JTextField txtPatientClinicId;
    private javax.swing.JTextField txtPatientContactNumber;
    private javax.swing.JTextField txtPatientHeartRate;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientResidence;
    private javax.swing.JTextField txtVisitDate;
    // End of variables declaration//GEN-END:variables

    private void populatePersonTable() {
        
        defaultTableModel = (DefaultTableModel)jTableAddPatientPersonDirectory.getModel();
        defaultTableModel.setRowCount(0);
        
        for(Person person : personDirectory.getPersonDirectoryArrayList()){
            Object[] row = new Object[7];
            row[0]= person;
            row[1]= person.getPersonAge();
            row[2]= person.getGender();
            row[3]= person.getContactNumber();
            row[4]= person.getHouseAddress();
            row[5]= person.getCommunityName();
            row[6]= person.getCityName();
            
            defaultTableModel.addRow(row); 
    
        }
    }   

    @SuppressWarnings("empty-statement")
    private void populatePatientTable() {
     defaultTableModel = (DefaultTableModel)jTablePatientDirectoryData.getModel();
        defaultTableModel.setRowCount(0);
        
//        int j;
//        for(j = 0 ; j< patientDirectory.getPatientDirectoryArrayList().size();j++);
//        {
////            System.out.println(patientDirectory.getPatientDirectoryArrayList().get(j).getCityName());
//            Patient cs =  patientDirectory.getPatientDirectoryArrayList().get(j);
//            Patient cs = patientDirectory.getPatientDirectoryArrayList();
            for(VitalSignHistory vsh : cs.getVitalSignHistory()){
            Object[] row ={
            cs.getPersonName(),
            cs.getPersonAge(),
            cs.getGender(),
            cs.getContactNumber(),
            cs.getHouseAddress(),
            cs.getCommunityName(),
            cs.getCityName(),
            vsh.getDate(),
            vsh.getVitalSigns().getId(),
            vsh.getVitalSigns().getBodyTemperature(),
            vsh.getVitalSigns().getBloodPressure(),
            vsh.getVitalSigns().getHeartRate(),
            vsh.getVitalSigns().getWeight(),
            
            };
            defaultTableModel.addRow(row);     
            
        }
    } 
}
